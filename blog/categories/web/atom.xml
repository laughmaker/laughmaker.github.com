<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Web | 闻竹]]></title>
  <link href="http://makeLaugh.github.io/blog/categories/web/atom.xml" rel="self"/>
  <link href="http://makeLaugh.github.io/"/>
  <updated>2014-05-15T17:06:08+08:00</updated>
  <id>http://makeLaugh.github.io/</id>
  <author>
    <name><![CDATA[makeLaugh]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[centos6.5配置nginx+php+mongo服务器环境]]></title>
    <link href="http://makeLaugh.github.io/blog/2014/05/09/centos6-dot-4pei-zhi-nginx-plus-php-plus-mongofu-wu-qi-huan-jing/"/>
    <updated>2014-05-09T13:56:34+08:00</updated>
    <id>http://makeLaugh.github.io/blog/2014/05/09/centos6-dot-4pei-zhi-nginx-plus-php-plus-mongofu-wu-qi-huan-jing</id>
    <content type="html"><![CDATA[<p>首先系统安装完成后，执行：<code>yum -y update</code> 命令，升级补丁。</p>

<hr />

<h2 id="php54">安装PHP5.4</h2>

<p><a href="http://www.iitshare.com/centeros-6-3-64-bit-install-php-5-4-3.html">参考教程</a></p>

<p><strong>1.安装支持套件</strong></p>

<pre><code>yum -y install gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers
</code></pre>

<p><strong>2.安装支持库</strong></p>

<ul>
  <li><a href="http://pan.baidu.com/share/link?shareid=2787262895&amp;uk=553700327&amp;fid=2190701233">pcre-8.30.tar.gz下载</a></li>
  <li><a href="http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.14.tar.gz">libiconv-1.14.tar.gz下载</a></li>
  <li><a href="http://centos.googlecode.com/files/libmcrypt-2.5.8.tar.gz">libmcrypt-2.5.8.tar.gz下载</a></li>
  <li><a href="http://nchc.dl.sourceforge.net/project/mhash/mhash/0.9.9.9/mhash-0.9.9.9.tar.gz">mhash-0.9.9.9.tar.gz下载</a></li>
  <li>
    <p><a href="http://nchc.dl.sourceforge.net/project/mcrypt/MCrypt/2.6.8/mcrypt-2.6.8.tar.gz">mcrypt-2.6.8.tar.gz下载</a></p>

    <pre><code> 安装方法：
 tar zxvf 文件名.tar.gz
 cd 文件夹
 ./configure
 make install
</code></pre>
  </li>
</ul>

<p><strong>备注：</strong></p>

<pre><code>配置mcrypt-2.6.8.tar.gz支持库时出现以下错误
configure: error: *** libmcrypt was not found
解决方法
运行 export LD_LIBRARY_PATH=/usr/local/lib: LD_LIBRARY_PATH
然后编译执行

# ./configure
# make
# make install
</code></pre>

<p><strong>3.安装PHP5.4</strong></p>

<p><strong><a href="http://am1.php.net/get/php-5.4.26.tar.gz/from/this/mirror">下载地址</a></strong></p>

<p><strong>安装方法：</strong></p>

<pre><code>tar jvxf php-5.4.26.tar.gz
cd php-5.4.26
./configure -prefix=/usr/local/php -with-config-file-path=/usr/local/php/etc -with-iconv-dir=/usr/local/lib -with-freetype-dir -with-jpeg-dir -with-png-dir -with-zlib -with-libxml-dir=/usr -enable-xml -disable-rpath -enable-bcmath -enable-inline-optimization -with-curl -with-curlwrappers -enable-fpm -enable-mbstring -with-mcrypt -with-gd -enable-gd-native-ttf -with-openssl -with-mhash -enable-pcntl -enable-sockets -with-xmlrpc -enable-soap -without-pear -with-fpm-user=www -with-fpm-group=www --disable-fileinfo
make
make install
</code></pre>

<p><strong>备注：</strong></p>

<ul>
  <li>若./configure…时，报：<code>configure: error: Cannot find ldap libraries in /usr/lib</code>错误，则执行：<code>cp -frp /usr/lib64/libldap* /usr/lib/</code> 命令，再<code>./configure</code></li>
  <li>若make时报<code>make: *** [sapi/cli/php] Error 1</code>错误，则执行：先<code>make clean</code>后 再<code>make ZEND_EXTRA_LIBS='-liconv'</code> 命令</li>
  <li>若<code>make ZEND_EXTRA_LIBS='-liconv'</code>时报<code>make: *** [ext/phar/phar.php] 错误 127</code>，则。。。</li>
  <li>最后make install</li>
</ul>

<p><strong>添加配置文件：</strong></p>

<p>在安装文件目录，执行以下命令：</p>

<ul>
  <li>cp php.ini-production /usr/local/php/lib/php.ini</li>
  <li>cp php.ini-production /usr/local/php/etc/php.ini</li>
  <li>cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf</li>
</ul>

<p>编辑php-fpm.conf文件为以下内容：</p>

<pre><code>[global]
pid = run/php-fpm.pid
error_log = log/php-fpm.log
log_level = notice
[www]
listen = 127.0.0.1:9000
user = www
group = www
pm = dynamic
pm.max_children = 5
pm.start_servers = 2
pm.min_spare_servers = 1
pm.max_spare_servers = 3
pm.max_requests = 500
</code></pre>

<p>测试php-fpm配置：</p>

<pre><code>/usr/local/php/sbin/php-fpm -t
如果显示以下信息，则说明安装成功
NOTICE: configuration file /usr/local/php/etc/php-fpm.conf test is successful
</code></pre>

<p>启动9000端口号</p>

<pre><code>防火墙中开启php默认的端口号9000，如果服务器没有开启防火墙，则不需要
</code></pre>

<p>启动php-fpm：</p>

<pre><code>/usr/local/php/sbin/php-fpm
如果启动报错：ERROR: [pool www] cannot get uid for user ‘www’
增加用户即可,具体的代码：useradd www -M -s /sbin/nologin
</code></pre>

<hr />

<h2 id="nginx">安装NGINX</h2>

<p><a href="http://nginx.org/packages/centos/6/x86_64/RPMS/nginx-1.4.6-1.el6.ngx.x86_64.rpm">下载地址</a></p>

<p><a href="http://nginx.org/packages/centos/6/x86_64/RPMS/nginx-1.4.6-1.el6.ngx.x86_64.rpm">nginx官方源库</a>：可以找寻其他版本</p>

<p>安装：</p>

<pre><code>rpm -ivh nginx-release-centos-6-0.el6.ngx.noarch.rpm
</code></pre>

<hr />

<h2 id="mongodb">安装Mongodb</h2>

<p><strong>1.添加yum源：</strong></p>

<pre><code>vi /etc/yum.repos.d/10gen.repo
添加以下语句：

[10gen] 
name=10gen Repository 
baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64 
gpgcheck=0 
</code></pre>

<p><strong>2.安装MongoDB的服务器端和客户端工具：</strong></p>

<pre><code>yum install mongo-10gen-server
yum install mongo-10gen
</code></pre>

<p>3.更新Mongodb：</p>

<pre><code>停掉mongodb，执行
yum update mongo-10gen mongo-10gen-server
</code></pre>

<p>备注：也可到<a href="http://downloads-distro.mongodb.org/repo/redhat/os/x86_64">这里</a>下载最新版，手动<code>yum -ivh ...</code>安装。需要先安装mongo-10gen，再安装mongo-10gen-server。</p>

<p>启动Mongodb：service mongod start</p>

<hr />

<p><strong>以上将三个库都安装完成了，下面需要装三个关联起来。</strong></p>

<p><strong>首先配置NGINX，支持PHP解析</strong></p>

<p>1.打开/etc/nginx/conf.d目录下的default.conf文件。<br />
2.如下代码所示，将<code>location</code> 中的相关路径保持一致，差添加index.php解析</p>

<pre><code>server {
listen       80;
server_name  localhost;

#charset koi8-r;
#access_log  /var/log/nginx/log/host.access.log  main;

location / {
    root   /usr/share/nginx/html;
    index  index.php index.html index.htm;
}

#error_page  404              /404.html;

# redirect server error pages to the static page /50x.html
#
error_page   500 502 503 504  /50x.html;
location = /50x.html {
    root   /usr/share/nginx/html;
}

# proxy the PHP scripts to Apache listening on 127.0.0.1:80
#
#location ~ \.php$ {
#    proxy_pass   http://127.0.0.1;
#}

# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#
location ~ \.php$ {
    root           /usr/share/nginx/html;
    fastcgi_pass   127.0.0.1:9000;
    fastcgi_index  index.php;
    fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html$fastcgi_script_name;
    include        fastcgi_params;
}

# deny access to .htaccess files, if Apache's document root
# concurs with nginx's one
#
#location ~ /\.ht {
#    deny  all;
#}
</code></pre>

<h5 id="phpmongodb">安装PHP对Mongodb的驱动</h5>

<p>1.<strong><a href="http://github.com/mongodb/mongo-php-driver">下载驱动</a></strong></p>

<p>2.<strong>解压，并进入到该目录。</strong></p>

<p>3.执行以下命令：</p>

<pre><code>phpize		或者  /usr/local/php/bin/phpize 
./configure	或者  ./configure  --with-php-config=/usr/local/php/bin/php-config --with-mongodb 
make all
sudo make install
</code></pre>

<p>4.编辑php配置文件，添加对mongodb的支持</p>

<pre><code>vim /usr/local/php/etc/php.ini

在最后添加如下代码：

extension=mongo.so

保存退出
</code></pre>

<h5 id="mongodb-administrator">安装MongoDB Administrator</h5>

<p>1.<a href="http://rockmongo.com/downloads">下载地址</a></p>

<p>2.将文件解压到 <code>/usr/share/nginx/html</code> 文件夹里</p>

<p>3.在浏览器里打开：http://localhost/rockmongo/index.php</p>

<p>4.初始密码：admin admin</p>

<p>5.若添加管理员后，去除默认管理员，需要打开rockmogo里的配置文件，将其中一行改为：</p>

<pre><code>vim /usr/share/nginx/html/rockmongo/config.php

$MONGO["servers"][$i]["mongo_auth"] = true;//enable mongo authentication?
</code></pre>

<hr />

<p>至此，已全部配置完毕，在配置完成后，需要重新启动服务。</p>

<p><strong>以下是几个常用命令</strong></p>

<pre><code>* 启动NGINX：service nginx start
* 停步NGINX：service nginx stop
* 重启NGINX：service nginx reload


* 启动PHP： /usr/local/php/sbin/php-fpm
* 停止PHP：killall -9 php-fpm

* 启动Mongo：service mongod start
* 停止Mongo：service mongod stop
</code></pre>

<p><strong>相关配置文件所在目录：</strong></p>

<pre><code>* nginx 配置文件目录：/etc/nginx/*.conf
* php配置文件目录：/usr/local/php/etc/php.ini
* 网页文件目录：/usr/share/nginx/html 
</code></pre>

]]></content>
  </entry>
  
</feed>
